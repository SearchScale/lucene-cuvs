diff --git a/cpp/include/cuvs/neighbors/cagra.hpp b/cpp/include/cuvs/neighbors/cagra.hpp
index d6f5fef..0619d63 100644
--- a/cpp/include/cuvs/neighbors/cagra.hpp
+++ b/cpp/include/cuvs/neighbors/cagra.hpp
@@ -111,17 +111,18 @@ struct index_params : ann::index_params {
   /** Build a raft CAGRA index params from an existing cuvs CAGRA index params. */
   operator raft::neighbors::cagra::index_params() const
   {
-    return raft::neighbors::cagra::index_params{
-      {
-        .metric            = static_cast<raft::distance::DistanceType>((int)this->metric),
-        .metric_arg        = this->metric_arg,
-        .add_data_on_build = this->add_data_on_build,
-      },
-      .intermediate_graph_degree = intermediate_graph_degree,
-      .graph_degree              = graph_degree,
-      .build_algo       = static_cast<raft::neighbors::cagra::graph_build_algo>((int)build_algo),
-      .nn_descent_niter = nn_descent_niter,
-      .compression      = compression};
+    raft::neighbors::cagra::index_params params;
+
+    params.metric            = static_cast<raft::distance::DistanceType>((int)this->metric);
+    params.metric_arg        = this->metric_arg;
+    params.add_data_on_build = this->add_data_on_build;
+    params.intermediate_graph_degree = intermediate_graph_degree;
+    params.graph_degree              = graph_degree;
+    params.build_algo       = static_cast<raft::neighbors::cagra::graph_build_algo>((int)build_algo);
+    params.nn_descent_niter = nn_descent_niter;
+    params.compression      = compression;
+
+    return params;
   }
 };
 
diff --git a/cpp/include/cuvs/neighbors/ivf_flat.hpp b/cpp/include/cuvs/neighbors/ivf_flat.hpp
index efb32e0..7c5d380 100644
--- a/cpp/include/cuvs/neighbors/ivf_flat.hpp
+++ b/cpp/include/cuvs/neighbors/ivf_flat.hpp
@@ -58,17 +58,19 @@ struct index_params : ann::index_params {
   /** Build a raft IVF_FLAT index params from an existing cuvs IVF_FLAT index params. */
   operator raft::neighbors::ivf_flat::index_params() const
   {
-    return raft::neighbors::ivf_flat::index_params{
-      {
-        .metric            = static_cast<raft::distance::DistanceType>((int)this->metric),
-        .metric_arg        = this->metric_arg,
-        .add_data_on_build = this->add_data_on_build,
-      },
-      .n_lists                        = n_lists,
-      .kmeans_n_iters                 = kmeans_n_iters,
-      .kmeans_trainset_fraction       = kmeans_trainset_fraction,
-      .adaptive_centers               = adaptive_centers,
-      .conservative_memory_allocation = conservative_memory_allocation};
+    raft::neighbors::ivf_flat::index_params params;
+
+    params.metric            = static_cast<raft::distance::DistanceType>((int)this->metric);
+    params.metric_arg        = this->metric_arg;
+    params.add_data_on_build = this->add_data_on_build;
+
+    params.n_lists                        = n_lists;
+    params.kmeans_n_iters                 = kmeans_n_iters;
+    params.kmeans_trainset_fraction       = kmeans_trainset_fraction;
+    params.adaptive_centers               = adaptive_centers;
+    params.conservative_memory_allocation = conservative_memory_allocation;
+
+    return params;
   }
 };
 /**
diff --git a/cpp/include/cuvs/neighbors/ivf_pq.hpp b/cpp/include/cuvs/neighbors/ivf_pq.hpp
index b2fc9a3..296bfad 100644
--- a/cpp/include/cuvs/neighbors/ivf_pq.hpp
+++ b/cpp/include/cuvs/neighbors/ivf_pq.hpp
@@ -95,20 +95,22 @@ struct index_params : ann::index_params {
   /** Build a raft IVF_PQ index params from an existing cuvs IVF_PQ index params. */
   operator raft::neighbors::ivf_pq::index_params() const
   {
-    return raft::neighbors::ivf_pq::index_params{
-      {
-        .metric            = static_cast<raft::distance::DistanceType>((int)this->metric),
-        .metric_arg        = this->metric_arg,
-        .add_data_on_build = this->add_data_on_build,
-      },
-      .n_lists                  = n_lists,
-      .kmeans_n_iters           = kmeans_n_iters,
-      .kmeans_trainset_fraction = kmeans_trainset_fraction,
-      .pq_bits                  = pq_bits,
-      .pq_dim                   = pq_dim,
-      .codebook_kind = static_cast<raft::neighbors::ivf_pq::codebook_gen>((int)this->codebook_kind),
-      .force_random_rotation          = force_random_rotation,
-      .conservative_memory_allocation = conservative_memory_allocation};
+    raft::neighbors::ivf_pq::index_params params;
+
+    params.metric = static_cast<raft::distance::DistanceType>((int)this->metric);
+    params.metric_arg = this->metric_arg;
+    params.add_data_on_build = this->add_data_on_build;
+
+    params.n_lists = n_lists;
+    params.kmeans_n_iters = kmeans_n_iters;
+    params.kmeans_trainset_fraction = kmeans_trainset_fraction;
+    params.pq_bits = pq_bits; // assuming pq_bits is a member in your struct, but not shown in the provided code.
+    params.pq_dim = pq_dim;
+    params.codebook_kind = static_cast<raft::neighbors::ivf_pq::codebook_gen>((int)this->codebook_kind);
+    params.force_random_rotation = force_random_rotation;
+    params.conservative_memory_allocation = conservative_memory_allocation;
+
+    return params;
   }
 };
 /**
